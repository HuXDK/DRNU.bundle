#SearchDirectoryObject(identifier='com.plexapp.plugins.foo', name='My Search Service', title=L('Search'))
# @TODO: get name of radio channels (http://www.dr.dk/mu/Bundle?BundleType='Channel'&ChannelType='TV'&DrChannel=true&SourceUrl='dr.dk/mas/whatson/channel/DR3')
ChannelNames = {"DR1":"DR1", "DR2":"DR2", "TVR":"DR Ramasjang", "TVK":"DR K","TVU":"DR Update","TVH":"DR HD"}

ICON = 'icon-default.png'
def Search(query):
	dir = ObjectContainer(mixed_parents = True)
	#json = JSON.ObjectFromURL("http://www.dr.dk/mu/programcard?Title=$like('%s')" % query)
	
	
	json = JSON.ObjectFromURL(argsToURLString(APIURL = "http://www.dr.dk/mu/search/bundle", 
											Title="'%s'" % query,
											BundleType = 'Series'))
	
	for drData in json['Data']:
		# TV Series
		if drData['ChannelType'] == 'TV':
			if 'Relations' in drData:
				
				tvo = TVShowObject()
				tvo.key = Callback(getProgramCards, relations = drData.get('Relations'), channeltype = drData.get('ChannelType'))
				tvo.rating_key = drData.get('Urn')
				tvo.genres = [drData.get('OnlineGenreText')]
				tvo.source_title = ChannelNames[drData['PrimaryChannel'].rsplit('/',1)[1]]
				tvo.title = drData.get('Title')
				tvo.summary = drData.get('Description')
				tvo.originally_available_at = Datetime.Now()
				tvo.content_rating = ''
				tvo.studio = 'Danmarks Radio'
				tvo.thumb = R(ICON)
				tvo.episode_count = 1
				dir.add(tvo)
			
	return dir
				
def getProgramCards(relations, channeltype):
	dir = ObjectContainer()
	for relation in relations:
		if relation['Kind'] == 'Member':
			json = JSON.ObjectFromURL("http://www.dr.dk/mu/programcard?Urn='%s'" % relation['Urn'])
			for drData in json['Data']:
				vco = VideoClipObject()
				vco.title = drData.get('title')
				vco.rating_key = drData.get('Urn')
				
					
				
				dir.add(vco)
				Log.Debug(json)
	return dir

def argsToURLString(APIURL, **kwargs):
	
	# set varaible
	url = APIURL
	
	# only add args if there are any
	if len(kwargs)>0:
		url += '?'
		for urlArgs in kwargs:
			try:
				arg = urlArgs.replace('_','.')
				val = kwargs[urlArgs].replace(' ','_')
			except:
				pass
			url += arg + '=' + val + '&'
		url = url.rstrip('&')
		
	return url
				
			
		
	#===========================================================================
	# for program in json['Data']:
	#	programSlug = program.get('Slug')
	#	for relations in program.get('Relations'):
	#		if relations.get('BundleType') == 'Series':
	#			seriesSlug = relations.get('Slug', 'Plex')
	#	for assets in program.get('Assets'):
	#		if assets.get('Kind') == 'VideoResource' or assets.get('Kind') == 'AudioResource':
	#			duration = assets.get('DurationInMilliseconds')
	#			break
	#		else:
	#			duration = None
	#	for assets in program.get('Assets'):
	#		if assets.get('Kind') == 'Image':
	#			thumb = assets.get('Uri') + '?height=512&width=512'
	#			break
	#		else:
	#			thumb = None
	#	dir.add(VideoClipObject(title = program.get('Title'),
	#						url = 'http://www.dr.dk/TV/se/%s/%s' %  (seriesSlug, programSlug),
	#						summary = unicode(String.StripTags(program.get('Description'))),
	#						duration = duration,
	#						thumb = thumb,
	#						studio = 'Danmarks Radio',
	#						year = program.get('ProductionYear'),
	#						tags = [program.get('GenreText')],
	#						source_title = ChannelNames[program.get('PrimaryChannel').rsplit('/',1)[1]])) 
	# return dir
	#===========================================================================